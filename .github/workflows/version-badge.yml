name: Update version badge

on:
  push:
    branches: [ main ]
    paths:
      - pyproject.toml
  workflow_dispatch:

permissions:
  contents: write   # n√©cessaire pour committer

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11 (tomllib dispo nativement)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract version from pyproject.toml
        id: ver
        run: |
          python - << 'PY'
          import os, json, pathlib, tomllib

          text = pathlib.Path("pyproject.toml").read_text(encoding="utf-8")
          data = tomllib.loads(text)

          ver = (
              data.get("tool", {}).get("poetry", {}).get("version")
              or data.get("project", {}).get("version")
          )
          if not ver:
              raise SystemExit("Version not found in pyproject.toml")

          out = {
              "schemaVersion": 1,
              "label": "version",
              "message": ver,
              "color": "blue",
          }
          p = pathlib.Path("docs/badges")
          p.mkdir(parents=True, exist_ok=True)
          (p / "version.json").write_text(json.dumps(out), encoding="utf-8")

          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as fh:
              fh.write(f"version={ver}\n")
          PY

      - name: Commit badge json if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update version badge to ${{ steps.ver.outputs.version }}"
          file_pattern: docs/badges/version.json
