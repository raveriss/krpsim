
[build-system]
requires = [
  "poetry-core>=1.7.0"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name    = "krpsim"
version = "0.1.0"
packages = [
  { include = "krpsim", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

# --------------------------------------------------------------------------- #
#  PEP 621 project metadata                                                   #
# --------------------------------------------------------------------------- #
[project]
name    = "krpsim"
version = "0.1.0"
description     = "Simulation et vÃ©rification de graphes de processus pour la gestion de ressources"
readme          = "README.md"
license         = { text = "MIT" }
requires-python = ">=3.10,<3.13"
authors         = [
  { name = "raveriss", email = "raveriss@example.com" }
]
dependencies    = []

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules"
]

[project.urls]
Repository    = "https://github.com/raveriss/krpsim"
Documentation = "https://github.com/raveriss/krpsim#readme"
Homepage      = "https://github.com/raveriss/krpsim"

[project.scripts]
krpsim       = "krpsim.cli:main"
krpsim-verif = "krpsim.verifier_cli:main"

# --------------------------------------------------------------------------- #
#  Poetry-specific dev dependencies                                           #
# --------------------------------------------------------------------------- #

[tool.poetry.group.dev.dependencies]
pytest     = "^8.2.0"
pytest-cov = "^5.0.0"
ruff       = "^0.0.281"
radon      = "^5.1.0"
bandit     = "^1.7.0"
mypy       = "^1.8.0"
pre-commit = "^3.6.0"
packaging  = ">=23.1"
xenon      = "^0.9.3"

# --------------------------------------------------------------------------- #
#  Formatting & linting                                                       #
# --------------------------------------------------------------------------- #
[tool.black]
line-length    = 88
target-version = ["py310"]
include        = '\\.pyi?$'
extend-exclude = '''
/(  
  \.git
  | \.venv
  | build
  | dist
  | \.mypy_cache
)/
'''

[tool.isort]
profile                        = "black"
multi_line_output              = 3
line_length                    = 88
include_trailing_comma         = true
force_grid_wrap                = 0
use_parentheses                = true
ensure_newline_before_comments = true

# --------------------------------------------------------------------------- #
#  Type checking                                                              #
# --------------------------------------------------------------------------- #
[tool.mypy]
strict                      = true
python_version              = "3.10"
warn_return_any             = true
warn_unused_configs         = true
disallow_untyped_defs       = true
disallow_incomplete_defs    = true
check_untyped_defs          = true
disallow_untyped_decorators = true
no_implicit_optional        = true
warn_redundant_casts        = true
warn_unused_ignores         = true
warn_no_return              = true
warn_unreachable            = true
strict_equality             = true
show_error_codes            = true

[[tool.mypy.overrides]]
module                = "tests.*"
disallow_untyped_defs = false

# --------------------------------------------------------------------------- #
#  Pytest & coverage                                                           #
# --------------------------------------------------------------------------- #
[tool.pytest.ini_options]
minversion = "8.0"
addopts    = [
  "--strict-markers",
  "--strict-config",
  "--cov=krpsim",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-fail-under=100"
]
testpaths        = ["tests"]
python_files     = ["test_*.py"]
python_classes   = ["Test*"]
python_functions = ["test_*"]
markers = [
  "slow: marks tests as slow",
  "integration: marks tests as integration",
  "unit: marks tests as unit"
]

[tool.coverage.run]
source = ["src/krpsim"]
omit   = [
  "tests/*",
  "krpsim/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if __name__ == \"__main__\":"
]

# --------------------------------------------------------------------------- #
#  Pre-commit hooks                                                            #
# --------------------------------------------------------------------------- #
[[tool.pre-commit.repos]]
repo = "https://github.com/pre-commit/pre-commit-hooks"
rev  = "v4.5.0"
hooks = [
  { id = "trailing-whitespace" },
  { id = "end-of-file-fixer" },
  { id = "check-yaml" },
  { id = "check-added-large-files" },
  { id = "check-merge-conflict" },
  { id = "debug-statements" }
]

[[tool.pre-commit.repos]]
repo = "https://github.com/psf/black"
rev  = "24.1.1"
hooks = [
  { id = "black", language_version = "python3.10" }
]

[[tool.pre-commit.repos]]
repo = "https://github.com/pycqa/isort"
rev  = "5.13.2"
hooks = [
  { id = "isort", args = ["--profile", "black"] }
]

[[tool.pre-commit.repos]]
repo = "https://github.com/charliermarsh/ruff-pre-commit"
rev  = "v0.0.281"
hooks = [
  { id = "ruff", args = ["--fix"] }
]

[[tool.pre-commit.repos]]
repo = "https://github.com/pre-commit/mirrors-mypy"
rev  = "v1.8.0"
hooks = [
  { id = "mypy" }
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
